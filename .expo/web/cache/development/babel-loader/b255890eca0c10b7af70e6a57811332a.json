{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/bhargavsai123/Documents/GitHub/BookSanta/screens/SettingScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport MyHeader from \"../components/MyHeader\";\nimport db from \"../config\";\nimport firebase from 'firebase';\n\nvar SettingScreen = function (_Component) {\n  _inherits(SettingScreen, _Component);\n\n  var _super = _createSuper(SettingScreen);\n\n  function SettingScreen() {\n    var _this;\n\n    _classCallCheck(this, SettingScreen);\n\n    _this = _super.call(this);\n\n    _this.getUserDetails = function () {\n      var email = firebase.auth().currentUser.email;\n      db.collection('users').where('email_id', '==', email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          var data = doc.data();\n\n          _this.setState({\n            emailId: data.email_id,\n            firstName: data.first_name,\n            lastName: data.last_name,\n            address: data.address,\n            contact: data.contact,\n            docId: doc.id\n          });\n        });\n      });\n    };\n\n    _this.updateUserDetails = function () {\n      db.collection('users').doc(_this.state.docId).update({\n        \"first_name\": _this.state.firstName,\n        \"last_name\": _this.state.lastName,\n        \"address\": _this.state.address,\n        \"contact\": _this.state.contact\n      });\n      Alert.alert(\"Profile Updated Successfully\");\n    };\n\n    _this.state = {\n      emailId: '',\n      firstName: '',\n      lastName: '',\n      address: '',\n      contact: '',\n      docId: ''\n    };\n    return _this;\n  }\n\n  _createClass(SettingScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserDetails();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 7\n        }\n      }, React.createElement(MyHeader, {\n        title: \"Settings\",\n        navigation: this.props.navigation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.formContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"First Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            firstName: text\n          });\n        },\n        value: this.state.firstName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Last Name\",\n        maxLength: 8,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            lastName: text\n          });\n        },\n        value: this.state.lastName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Contact\",\n        maxLength: 10,\n        keyboardType: 'numeric',\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            contact: text\n          });\n        },\n        value: this.state.contact,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }\n      }), React.createElement(TextInput, {\n        style: styles.formTextInput,\n        placeholder: \"Address\",\n        multiline: true,\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            address: text\n          });\n        },\n        value: this.state.address,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: function onPress() {\n          _this2.updateUserDetails();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }\n      }, \"Save\"))));\n    }\n  }]);\n\n  return SettingScreen;\n}(Component);\n\nexport { SettingScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formContainer: {\n    flex: 1,\n    width: '100%',\n    alignItems: 'center'\n  },\n  formTextInput: {\n    width: \"75%\",\n    height: 35,\n    alignSelf: 'center',\n    borderColor: '#ffab91',\n    borderRadius: 10,\n    borderWidth: 1,\n    marginTop: 20,\n    padding: 10\n  },\n  button: {\n    width: \"75%\",\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 10,\n    backgroundColor: \"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 8\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop: 20\n  },\n  buttonText: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    color: \"#fff\"\n  }\n});","map":{"version":3,"sources":["/home/bhargavsai123/Documents/GitHub/BookSanta/screens/SettingScreen.js"],"names":["React","Component","MyHeader","db","firebase","SettingScreen","getUserDetails","email","auth","currentUser","collection","where","get","then","snapshot","forEach","doc","data","setState","emailId","email_id","firstName","first_name","lastName","last_name","address","contact","docId","id","updateUserDetails","state","update","Alert","alert","styles","container","props","navigation","formContainer","formTextInput","text","button","buttonText","StyleSheet","create","flex","alignItems","justifyContent","width","height","alignSelf","borderColor","borderRadius","borderWidth","marginTop","padding","backgroundColor","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","fontSize","fontWeight","color"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  View,\n  Text,\n  KeyboardAvoidingView,\n  TextInput,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Alert} from 'react-native';\nimport MyHeader from '../components/MyHeader'\nimport db from '../config'\nimport firebase from 'firebase'\n\nexport default class SettingScreen extends Component{\n  constructor(){\n    super();\n    this.state={\n      emailId   : '',\n      firstName : '',\n      lastName  : '',\n      address   : '',\n      contact   : '',\n      docId     : ''\n    }\n  }\n\n  getUserDetails=()=>{\n    var email = firebase.auth().currentUser.email;\n    db.collection('users').where('email_id','==',email).get()\n    .then(snapshot => {\n      snapshot.forEach(doc => {\n      var data = doc.data()\n        this.setState({\n          emailId   : data.email_id,\n          firstName : data.first_name,\n          lastName  : data.last_name,\n          address   : data.address,\n          contact   : data.contact,\n          docId     : doc.id\n        })\n      });\n    })\n  }\n\n  updateUserDetails=()=>{\n    db.collection('users').doc(this.state.docId)\n    .update({\n      \"first_name\": this.state.firstName,\n      \"last_name\" : this.state.lastName,\n      \"address\"   : this.state.address,\n      \"contact\"   : this.state.contact,\n    })\n\n    Alert.alert(\"Profile Updated Successfully\")\n\n  }\n\n  componentDidMount(){\n    this.getUserDetails()\n  }\n\n\n  render(){\n    return(\n      <View style={styles.container} >\n        <MyHeader title=\"Settings\" navigation={this.props.navigation}/>\n        <View style={styles.formContainer}>\n            <TextInput\n              style={styles.formTextInput}\n              placeholder ={\"First Name\"}\n              maxLength ={8}\n              onChangeText={(text)=>{\n                this.setState({\n                  firstName: text\n                })\n              }}\n              value ={this.state.firstName}\n            />\n            <TextInput\n              style={styles.formTextInput}\n              placeholder ={\"Last Name\"}\n              maxLength ={8}\n              onChangeText={(text)=>{\n                this.setState({\n                  lastName: text\n                })\n              }}\n                value ={this.state.lastName}\n            />\n            <TextInput\n              style={styles.formTextInput}\n              placeholder ={\"Contact\"}\n              maxLength ={10}\n              keyboardType={'numeric'}\n              onChangeText={(text)=>{\n                this.setState({\n                  contact: text\n                })\n              }}\n                value ={this.state.contact}\n            />\n            <TextInput\n              style={styles.formTextInput}\n              placeholder ={\"Address\"}\n              multiline = {true}\n              onChangeText={(text)=>{\n                this.setState({\n                  address: text\n                })\n              }}\n                value ={this.state.address}\n            />\n            <TouchableOpacity style={styles.button}\n              onPress={()=>{\n                this.updateUserDetails()\n              }}>\n              <Text style={styles.buttonText}>Save</Text>\n            </TouchableOpacity>\n        </View>\n      </View>\n    )\n  }\n}\n\n\nconst styles = StyleSheet.create({\n  container : {\n    flex:1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  formContainer:{\n    flex:1,\n    width:'100%',\n    alignItems: 'center'\n  },\n  formTextInput:{\n    width:\"75%\",\n    height:35,\n    alignSelf:'center',\n    borderColor:'#ffab91',\n    borderRadius:10,\n    borderWidth:1,\n    marginTop:20,\n    padding:10,\n  },\n  button:{\n    width:\"75%\",\n    height:50,\n    justifyContent:'center',\n    alignItems:'center',\n    borderRadius:10,\n    backgroundColor:\"#ff5722\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n       width: 0,\n       height: 8,\n    },\n    shadowOpacity: 0.44,\n    shadowRadius: 10.32,\n    elevation: 16,\n    marginTop:20\n  },\n  buttonText:{\n    fontSize:25,\n    fontWeight:\"bold\",\n    color:\"#fff\"\n  }\n})\n"]},"metadata":{},"sourceType":"module"}